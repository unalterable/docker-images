worker_processes 1;

events {
    worker_connections 1024;
}

http {
    log_format main '[$time_local] "$remote_addr" "$remote_user" "$request" "$status" "$body_bytes_sent" "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    log_format unauthorized_log '[$time_local] "$remote_addr" "$remote_user" "$request" "$status" "$body_bytes_sent" "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # HTTP server block
    server {
        listen 80;
        server_name localhost;

        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            access_log /var/log/nginx/unauthorized.log unauthorized_log;
            root /var/www;
            try_files $uri =404;
        }

        # Redirect all other HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name localhost;

        # TLS configuration
        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # Improve SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # Add HSTS header for better security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Basic authentication
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Allow Let's Encrypt HTTP challenge verification without authentication
        location /.well-known/acme-challenge/ {
            auth_basic off;
            allow all;
            root /var/www;
            access_log /var/log/nginx/unauthorized.log unauthorized_log;
            try_files $uri =404;
        }

        # Log unauthorized access with detailed info
        error_page 401 = /unauthorized;

        location = /unauthorized {
            access_log /var/log/nginx/unauthorized.log unauthorized_log;
            return 401;
        }

        # Proxy authenticated requests
        location / {
            proxy_pass $UPSTREAM_HOST;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}